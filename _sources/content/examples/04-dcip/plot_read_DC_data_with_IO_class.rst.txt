.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_content_examples_04-dcip_plot_read_DC_data_with_IO_class.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_content_examples_04-dcip_plot_read_DC_data_with_IO_class.py:


Reading and Plotting data with DC.IO class
==========================================

The DC.IO class is a convenient way to handle DC data and
carry inversions within a same class. It also has several plotting utils
such as pseudosections. We show here an example of plotting DC data based
on a demonstration dataset.


.. code-block:: default


    import numpy as np
    import pandas as pd
    import shutil
    import os
    import matplotlib.pyplot as plt
    from SimPEG.electromagnetics.static import resistivity as DC
    from SimPEG import Report
    from SimPEG.utils.io_utils import download








Download an example DC data csv file
------------------------------------



.. code-block:: default


    # file origina and name
    url = "https://storage.googleapis.com/simpeg/examples/dc_data.csv"
    fname = download(url, folder="./test_url", overwrite=True)

    # read csv using pandas
    df = pd.read_csv(fname)
    # header for ABMN locations
    header_loc = ["Spa." + str(i + 1) for i in range(4)]
    # Apparent resistivity
    header_apprho = df.keys()[6]





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading https://storage.googleapis.com/simpeg/examples/dc_data.csv
       saved to: /home/vsts/work/1/s/examples/04-dcip/test_url/dc_data.csv
    Download completed!




Convert file to DC.IO object
----------------------------



.. code-block:: default


    # Number of the data
    ndata = df[header_loc[0]].values.size
    # ABMN locations
    a = np.c_[df[header_loc[0]].values, np.zeros(ndata)]
    b = np.c_[df[header_loc[1]].values, np.zeros(ndata)]
    m = np.c_[df[header_loc[2]].values, np.zeros(ndata)]
    n = np.c_[df[header_loc[3]].values, np.zeros(ndata)]
    # Apparent resistivity
    apprho = df[header_apprho].values

    # Create DC.IO survey Object object
    IO = DC.IO()
    # Generate DC survey using IO object
    dc_survey = IO.from_ambn_locations_to_survey(
        a,
        b,
        m,
        n,
        survey_type="dipole-dipole",
        data_dc=apprho,
        data_dc_type="apparent_resistivity",
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/vsts/work/1/s/SimPEG/electromagnetics/static/resistivity/IODC.py:190: UserWarning: code under construction - API might change in the future
      warnings.warn("code under construction - API might change in the future")




Plot
----



.. code-block:: default

    fig, ax = plt.subplots(1, 1, figsize=(10, 3))
    IO.plotPseudoSection(
        data_type="apparent_resistivity", scale="linear", clim=(0, 1000), ncontour=3, ax=ax
    )
    plt.show()

    # clean up
    shutil.rmtree(os.path.expanduser("./test_url"))




.. image:: /content/examples/04-dcip/images/sphx_glr_plot_read_DC_data_with_IO_class_001.png
    :alt: plot read DC data with IO class
    :class: sphx-glr-single-img





Print the version of SimPEG and dependencies
--------------------------------------------



.. code-block:: default


    Report()






.. raw:: html

    <table style='border: 3px solid #ddd;'>
      <tr>
         <td style='text-align: center; font-weight: bold; font-size: 1.2em; border: 2px solid #fff;' colspan='6'>Thu Nov 19 19:05:57 2020 UTC</td>
      </tr>
      <tr>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>OS</td>
        <td style='text-align: left; border: 2px solid #fff;'>Linux</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>CPU(s)</td>
        <td style='text-align: left; border: 2px solid #fff;'>2</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>Machine</td>
        <td style='text-align: left; border: 2px solid #fff;'>x86_64</td>
      </tr>
      <tr>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>Architecture</td>
        <td style='text-align: left; border: 2px solid #fff;'>64bit</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>RAM</td>
        <td style='text-align: left; border: 2px solid #fff;'>6.8 GB</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>Environment</td>
        <td style='text-align: left; border: 2px solid #fff;'>Python</td>
      </tr>
      <tr>
         <td style='text-align: center; border: 2px solid #fff;' colspan='6'>Python 3.7.9 (default, Aug 31 2020, 12:42:55) 
    [GCC 7.3.0]</td>
      </tr>
      <tr>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>SimPEG</td>
        <td style='text-align: left; border: 2px solid #fff;'>0.14.2</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>discretize</td>
        <td style='text-align: left; border: 2px solid #fff;'>0.6.1</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>pymatsolver</td>
        <td style='text-align: left; border: 2px solid #fff;'>0.1.2</td>
      </tr>
      <tr>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>vectormath</td>
        <td style='text-align: left; border: 2px solid #fff;'>0.2.2</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>properties</td>
        <td style='text-align: left; border: 2px solid #fff;'>0.6.1</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>numpy</td>
        <td style='text-align: left; border: 2px solid #fff;'>1.19.2</td>
      </tr>
      <tr>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>scipy</td>
        <td style='text-align: left; border: 2px solid #fff;'>1.5.2</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>cython</td>
        <td style='text-align: left; border: 2px solid #fff;'>0.29.21</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>IPython</td>
        <td style='text-align: left; border: 2px solid #fff;'>7.19.0</td>
      </tr>
      <tr>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>matplotlib</td>
        <td style='text-align: left; border: 2px solid #fff;'>3.3.2</td>
        <td style='text-align: right; background-color: #ccc; border: 2px solid #fff;'>ipywidgets</td>
        <td style='text-align: left; border: 2px solid #fff;'>7.5.1</td>
        <td style= border: 2px solid #fff;'></td>
        <td style= border: 2px solid #fff;'></td>
      </tr>
      <tr>
         <td style='text-align: center; background-color: #ddd;border: 2px solid #fff;' colspan='6'>Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications</td>
      </tr>
    </table>
    <br />
    <br />

Moving Forward
--------------

If you have suggestions for improving this example, please create a `pull request on the example in SimPEG <https://github.com/simpeg/simpeg/blob/master/examples/06-dc/read_plot_DC_data_with_IO_class.py>`_

You might try:
   - changing the contour levels
   - try with you own dataset
   - create a mask for negative apparent resistivities
   - ...


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.511 seconds)

**Estimated memory usage:**  11 MB


.. _sphx_glr_download_content_examples_04-dcip_plot_read_DC_data_with_IO_class.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_read_DC_data_with_IO_class.py <plot_read_DC_data_with_IO_class.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_read_DC_data_with_IO_class.ipynb <plot_read_DC_data_with_IO_class.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
