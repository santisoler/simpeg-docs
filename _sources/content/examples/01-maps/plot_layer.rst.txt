.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_content_examples_01-maps_plot_layer.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_content_examples_01-maps_plot_layer.py:


Maps: Parametrized Layer
========================

Build a model of a parametrized layer in a wholespace. If you want to
build a model of a parametrized layer in a halfspace, also use
maps.InjectActiveCell.

The model is

.. code::

    m = [
        'background physical property value',
        'layer physical property value',
        'layer center',
        'layer thickness'
    ]



.. image:: /content/examples/01-maps/images/sphx_glr_plot_layer_001.png
    :alt: plot layer
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /usr/share/miniconda/envs/deploy/lib/python3.7/site-packages/discretize/utils/code_utils.py:157: FutureWarning: TensorMesh.plotImage has been deprecated, please use TensorMesh.plot_image. It will be removed in version 1.0.0 of discretize.
      FutureWarning,






|


.. code-block:: default

    import discretize
    from SimPEG import maps
    import numpy as np
    import matplotlib.pyplot as plt


    def run(plotIt=True):

        mesh = discretize.TensorMesh([50, 50], x0="CC")  # 2D tensor mesh
        mapping = maps.ParametricLayer(mesh)  # parametric layer in wholespace

        # model
        m = np.hstack(
            np.r_[
                1.0,  # background value
                2.0,  # layer value
                -0.1,  # layer center
                0.2,  # layer thickness
            ]
        )
        rho = mapping * m  # apply the mapping

        if plotIt is True:
            fig, ax = plt.subplots(1, 1, figsize=(4, 6))
            mesh.plotImage(rho, ax=ax)


    if __name__ == "__main__":
        run()
        plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.181 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_content_examples_01-maps_plot_layer.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_layer.py <plot_layer.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_layer.ipynb <plot_layer.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
