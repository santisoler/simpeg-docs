
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:


Petrophysically guided inversion: Joint linear example with nonlinear relationships
===================================================================================

We do a comparison between the classic Tikhonov inversion
and our formulation of a petrophysically guided inversion.
We explore it through coupling two linear problems whose respective physical
properties are linked by polynomial relationships that change between rock units.

.. GENERATED FROM PYTHON SOURCE LINES 11-453



.. image-sg:: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :alt: Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petro Distribution
   :srcset: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/vsts/work/1/s/SimPEG/simulation.py:546: UserWarning:

    G has not been implemented for the simulation

    SimPEG.InvProblem will set Regularization.mref to m0.
    SimPEG.InvProblem will set Regularization.mref to m0.
    SimPEG.InvProblem will set Regularization.mref to m0.

            SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
            ***Done using same Solver and solver_opts as the LinearSimulation problem***
    /usr/share/miniconda/envs/deploy/lib/python3.7/site-packages/pymatsolver/direct.py:26: PardisoTypeConversionWarning:

    Converting csc_matrix matrix to CSR format, will slow down.

    Alpha scales:  [1, 1, 1]
    Alpha scales:  [1.0]
    Alpha scales:  [0.0, 3.456351510282569, 0.0]
    Alpha scales:  [0.0, 0.034565616827988505, 0.0]
    Scale Multipliers:  [0.09369146 0.90630854]
    Initial data misfit scales:  [0.09369146 0.90630854]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.89e+01  1.50e+05  0.00e+00  1.50e+05    1.41e+02      0              
    /usr/share/miniconda/envs/deploy/lib/python3.7/site-packages/pymatsolver/direct.py:73: PardisoTypeConversionWarning:

    Converting csc_matrix matrix to CSR format, will slow down.

    geophys. misfits: 537.1 (target 15.0 [False]); 34.4 (target 15.0 [False]) | smallness misfit: 1486.1 (target: 100.0 [False])
    Beta cooling evaluation: progress: [537.1  34.4] ; minimum progress targets: [120000. 120000.]
       1  1.89e+01  8.15e+01  2.13e+01  4.84e+02    7.49e+01      0              
    geophys. misfits: 254.8 (target 15.0 [False]); 8.1 (target 15.0 [True]) | smallness misfit: 788.5 (target: 100.0 [False])
    Beta cooling evaluation: progress: [254.8   8.1] ; minimum progress targets: [429.6  27.5]
    Updating scaling for data misfits by  1.8611990585388516
    New scales: [0.16135889 0.83864111]
       2  1.89e+01  4.79e+01  2.11e+01  4.48e+02    7.29e+01      0   Skip BFGS  
    geophys. misfits: 119.0 (target 15.0 [False]); 7.8 (target 15.0 [True]) | smallness misfit: 708.1 (target: 100.0 [False])
    Beta cooling evaluation: progress: [119.    7.8] ; minimum progress targets: [203.9  15. ]
    Updating scaling for data misfits by  1.9346813177999433
    New scales: [0.27126593 0.72873407]
       3  1.89e+01  3.79e+01  2.20e+01  4.54e+02    7.13e+01      0              
    geophys. misfits: 60.3 (target 15.0 [False]); 7.8 (target 15.0 [True]) | smallness misfit: 663.0 (target: 100.0 [False])
    Beta cooling evaluation: progress: [60.3  7.8] ; minimum progress targets: [95.2 15. ]
    Updating scaling for data misfits by  1.921200352074439
    New scales: [0.41696157 0.58303843]
       4  1.89e+01  2.97e+01  2.26e+01  4.57e+02    7.94e+01      0              
    geophys. misfits: 36.1 (target 15.0 [False]); 8.5 (target 15.0 [True]) | smallness misfit: 630.1 (target: 100.0 [False])
    Beta cooling evaluation: progress: [36.1  8.5] ; minimum progress targets: [48.3 15. ]
    Updating scaling for data misfits by  1.7746829987307826
    New scales: [0.55931014 0.44068986]
       5  1.89e+01  2.39e+01  2.30e+01  4.59e+02    6.59e+01      0   Skip BFGS  
    geophys. misfits: 26.3 (target 15.0 [False]); 9.7 (target 15.0 [True]) | smallness misfit: 603.0 (target: 100.0 [False])
    Beta cooling evaluation: progress: [26.3  9.7] ; minimum progress targets: [28.8 15. ]
    Updating scaling for data misfits by  1.5407174998985986
    New scales: [0.66163995 0.33836005]
       6  1.89e+01  2.07e+01  2.32e+01  4.60e+02    5.38e+01      0   Skip BFGS  
    geophys. misfits: 22.4 (target 15.0 [False]); 11.6 (target 15.0 [True]) | smallness misfit: 581.3 (target: 100.0 [False])
    Beta cooling evaluation: progress: [22.4 11.6] ; minimum progress targets: [21.1 15. ]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.2969922733197592
    New scales: [0.71720895 0.28279105]
       7  9.46e+00  1.93e+01  2.33e+01  2.40e+02    7.20e+01      0   Skip BFGS  
    geophys. misfits: 12.4 (target 15.0 [True]); 8.1 (target 15.0 [True]) | smallness misfit: 609.4 (target: 100.0 [False])
    Beta cooling evaluation: progress: [12.4  8.1] ; minimum progress targets: [17.9 15. ]
    Warming alpha_s to favor clustering:  1.5294614663231747
       8  9.46e+00  1.12e+01  2.46e+01  2.44e+02    2.49e+01      0              
    geophys. misfits: 12.2 (target 15.0 [True]); 10.3 (target 15.0 [True]) | smallness misfit: 534.2 (target: 100.0 [False])
    Beta cooling evaluation: progress: [12.2 10.3] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  2.0505297794482353
       9  9.46e+00  1.17e+01  2.51e+01  2.49e+02    2.87e+01      0              
    geophys. misfits: 12.0 (target 15.0 [True]); 12.6 (target 15.0 [True]) | smallness misfit: 481.3 (target: 100.0 [False])
    Beta cooling evaluation: progress: [12.  12.6] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  2.503965859552001
      10  9.46e+00  1.22e+01  2.55e+01  2.54e+02    2.46e+01      0   Skip BFGS  
    geophys. misfits: 12.1 (target 15.0 [True]); 15.1 (target 15.0 [False]) | smallness misfit: 442.6 (target: 100.0 [False])
    Beta cooling evaluation: progress: [12.1 15.1] ; minimum progress targets: [15. 15.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.2431828425730589
    New scales: [0.67106018 0.32893982]
      11  4.73e+00  1.31e+01  2.54e+01  1.33e+02    7.39e+01      0   Skip BFGS  
    geophys. misfits: 9.4 (target 15.0 [True]); 8.5 (target 15.0 [True]) | smallness misfit: 499.5 (target: 100.0 [False])
    Beta cooling evaluation: progress: [9.4 8.5] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  4.204119044852239
      12  4.73e+00  9.11e+00  2.79e+01  1.41e+02    5.36e+01      0              
    geophys. misfits: 9.4 (target 15.0 [True]); 11.9 (target 15.0 [True]) | smallness misfit: 413.1 (target: 100.0 [False])
    Beta cooling evaluation: progress: [ 9.4 11.9] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  6.017034660775793
      13  4.73e+00  1.02e+01  2.91e+01  1.48e+02    4.45e+01      0              
    geophys. misfits: 9.6 (target 15.0 [True]); 16.3 (target 15.0 [False]) | smallness misfit: 346.5 (target: 100.0 [False])
    Beta cooling evaluation: progress: [ 9.6 16.3] ; minimum progress targets: [15. 15.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.5692491857881978
    New scales: [0.56522291 0.43477709]
      14  2.37e+00  1.25e+01  2.87e+01  8.03e+01    7.28e+01      0              
    geophys. misfits: 8.5 (target 15.0 [True]); 8.7 (target 15.0 [True]) | smallness misfit: 414.8 (target: 100.0 [False])
    Beta cooling evaluation: progress: [8.5 8.7] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  10.457591608481446
      15  2.37e+00  8.62e+00  3.37e+01  8.83e+01    6.05e+01      0              
    geophys. misfits: 8.8 (target 15.0 [True]); 12.2 (target 15.0 [True]) | smallness misfit: 313.5 (target: 100.0 [False])
    Beta cooling evaluation: progress: [ 8.8 12.2] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  15.356493459176475
      16  2.37e+00  1.03e+01  3.59e+01  9.51e+01    7.34e+01      0              
    geophys. misfits: 9.2 (target 15.0 [True]); 14.4 (target 15.0 [True]) | smallness misfit: 257.3 (target: 100.0 [False])
    Beta cooling evaluation: progress: [ 9.2 14.4] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  20.569314471666694
      17  2.37e+00  1.14e+01  3.80e+01  1.01e+02    7.59e+01      0   Skip BFGS  
    geophys. misfits: 9.5 (target 15.0 [True]); 17.5 (target 15.0 [False]) | smallness misfit: 205.1 (target: 100.0 [False])
    Beta cooling evaluation: progress: [ 9.5 17.5] ; minimum progress targets: [15. 15.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.57808946148493
    New scales: [0.4516941 0.5483059]
      18  1.18e+00  1.39e+01  3.69e+01  5.75e+01    7.23e+01      0              
    geophys. misfits: 8.7 (target 15.0 [True]); 11.6 (target 15.0 [True]) | smallness misfit: 240.5 (target: 100.0 [False])
    Beta cooling evaluation: progress: [ 8.7 11.6] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  31.072986968646543
      19  1.18e+00  1.03e+01  4.44e+01  6.27e+01    8.25e+01      0              
    geophys. misfits: 9.0 (target 15.0 [True]); 7.7 (target 15.0 [True]) | smallness misfit: 213.3 (target: 100.0 [False])
    Beta cooling evaluation: progress: [9.  7.7] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  56.28750093362236
      20  1.18e+00  8.27e+00  5.53e+01  7.37e+01    8.50e+01      0              
    geophys. misfits: 8.8 (target 15.0 [True]); 6.9 (target 15.0 [True]) | smallness misfit: 172.9 (target: 100.0 [False])
    Beta cooling evaluation: progress: [8.8 6.9] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  108.95616502178106
      21  1.18e+00  7.77e+00  7.30e+01  9.41e+01    1.06e+02      0              
    geophys. misfits: 9.5 (target 15.0 [True]); 9.6 (target 15.0 [True]) | smallness misfit: 135.4 (target: 100.0 [False])
    Beta cooling evaluation: progress: [9.5 9.6] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  170.6704374341437
      22  1.18e+00  9.58e+00  8.64e+01  1.12e+02    1.06e+02      0              
    geophys. misfits: 10.0 (target 15.0 [True]); 12.5 (target 15.0 [True]) | smallness misfit: 124.6 (target: 100.0 [False])
    Beta cooling evaluation: progress: [10.  12.5] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  230.4151400357517
      23  1.18e+00  1.14e+01  9.70e+01  1.26e+02    1.16e+02      0              
    geophys. misfits: 12.4 (target 15.0 [True]); 20.3 (target 15.0 [False]) | smallness misfit: 82.6 (target: 100.0 [True])
    Beta cooling evaluation: progress: [12.4 20.3] ; minimum progress targets: [15. 15.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.2062442979192467
    New scales: [0.40580379 0.59419621]
      24  5.91e-01  1.71e+01  8.48e+01  6.72e+01    9.51e+01      0              
    geophys. misfits: 11.4 (target 15.0 [True]); 13.2 (target 15.0 [True]) | smallness misfit: 103.7 (target: 100.0 [False])
    Beta cooling evaluation: progress: [11.4 13.2] ; minimum progress targets: [15.  16.2]
    Warming alpha_s to favor clustering:  281.75469471347066
      25  5.91e-01  1.25e+01  1.03e+02  7.33e+01    9.12e+01      0              
    geophys. misfits: 10.9 (target 15.0 [True]); 11.7 (target 15.0 [True]) | smallness misfit: 87.4 (target: 100.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [10.9 11.7] ; minimum progress targets: [15. 15.]
    Warming alpha_s to favor clustering:  374.7275906760718
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 1.5000e+04
    0 : |xc-x_last| = 6.1820e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 9.1111e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 9.1111e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =     26
    ------------------------- DONE! -------------------------
    SimPEG.InvProblem will set Regularization.mref to m0.
    SimPEG.InvProblem will set Regularization.mref to m0.
    SimPEG.InvProblem will set Regularization.mref to m0.

            SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
            ***Done using same Solver and solver_opts as the LinearSimulation problem***
    Alpha scales:  [1, 1, 1]
    Alpha scales:  [1.0]
    Alpha scales:  [0.0, 3.486950099816795, 0.0]
    Alpha scales:  [0.0, 0.03489918112103828, 0.0]
    Scale Multipliers:  [0.09369146 0.90630854]
    Initial data misfit scales:  [0.09369146 0.90630854]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.87e+01  1.50e+05  0.00e+00  1.50e+05    1.41e+02      0              
    geophys. misfits: 534.1 (target 15.0 [False]); 33.9 (target 15.0 [False]) | smallness misfit: 105.9 (target: 100.0 [False])
    Beta cooling evaluation: progress: [534.1  33.9] ; minimum progress targets: [120000. 120000.]
       1  1.87e+01  8.08e+01  1.83e+01  4.24e+02    7.61e+01      0              
    geophys. misfits: 330.4 (target 15.0 [False]); 5.4 (target 15.0 [True]) | smallness misfit: 77.5 (target: 100.0 [True])
    Beta cooling evaluation: progress: [330.4   5.4] ; minimum progress targets: [427.3  27.1]
    Updating scaling for data misfits by  2.790285899427564
    New scales: [0.22387448 0.77612552]
       2  1.87e+01  7.81e+01  1.90e+01  4.34e+02    8.40e+01      0   Skip BFGS  
    geophys. misfits: 88.2 (target 15.0 [False]); 5.4 (target 15.0 [True]) | smallness misfit: 68.3 (target: 100.0 [True])
    Beta cooling evaluation: progress: [88.2  5.4] ; minimum progress targets: [264.3  15. ]
    Updating scaling for data misfits by  2.790508977419995
    New scales: [0.44596072 0.55403928]
       3  1.87e+01  4.23e+01  2.07e+01  4.31e+02    7.68e+01      0              
    geophys. misfits: 38.1 (target 15.0 [False]); 5.5 (target 15.0 [True]) | smallness misfit: 71.1 (target: 100.0 [True])
    Beta cooling evaluation: progress: [38.1  5.5] ; minimum progress targets: [70.6 15. ]
    Updating scaling for data misfits by  2.7464773719763773
    New scales: [0.68854256 0.31145744]
       4  1.87e+01  2.79e+01  2.16e+01  4.32e+02    8.22e+01      0   Skip BFGS  
    geophys. misfits: 23.9 (target 15.0 [False]); 6.6 (target 15.0 [True]) | smallness misfit: 66.6 (target: 100.0 [True])
    Beta cooling evaluation: progress: [23.9  6.6] ; minimum progress targets: [30.5 15. ]
    Updating scaling for data misfits by  2.264713779628772
    New scales: [0.83351726 0.16648274]
       5  1.87e+01  2.10e+01  2.19e+01  4.32e+02    6.46e+01      0   Skip BFGS  
    geophys. misfits: 19.3 (target 15.0 [False]); 6.8 (target 15.0 [True]) | smallness misfit: 65.4 (target: 100.0 [True])
    Beta cooling evaluation: progress: [19.3  6.8] ; minimum progress targets: [19.1 15. ]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  2.2086692273553505
    New scales: [0.91706742 0.08293258]
       6  9.37e+00  1.82e+01  2.21e+01  2.25e+02    7.37e+01      0   Skip BFGS  
    geophys. misfits: 11.2 (target 15.0 [True]); 7.9 (target 15.0 [True]) | smallness misfit: 71.5 (target: 100.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [11.2  7.9] ; minimum progress targets: [15.4 15. ]
    Warming alpha_s to favor clustering:  1.6169268939401724
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 1.5000e+04
    0 : |xc-x_last| = 1.0387e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 7.3700e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 7.3700e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      7
    ------------------------- DONE! -------------------------
    SimPEG.InvProblem will set Regularization.mref to m0.
    SimPEG.InvProblem will set Regularization.mref to m0.

            SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
            ***Done using same Solver and solver_opts as the LinearSimulation problem***
    /usr/share/miniconda/envs/deploy/lib/python3.7/site-packages/pymatsolver/direct.py:26: PardisoTypeConversionWarning:

    Converting csc_matrix matrix to CSR format, will slow down.

    Alpha scales:  [1, 1]
    Alpha scales:  [1.0, 0.0032950828701768593, 0.0]
    Alpha scales:  [1.0, 3.3021579143930114e-05, 0.0]
    Scale Multipliers:  [0.09369146 0.90630854]
    /home/vsts/work/1/s/SimPEG/directives/directives.py:624: UserWarning:

    There is no PGI regularization. Smallness target is turned off (TriggerSmall flag)

    Initial data misfit scales:  [0.09369146 0.90630854]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.98e+04  1.50e+05  0.00e+00  1.50e+05    1.41e+02      0              
    /usr/share/miniconda/envs/deploy/lib/python3.7/site-packages/pymatsolver/direct.py:73: PardisoTypeConversionWarning:

    Converting csc_matrix matrix to CSR format, will slow down.

    geophys. misfits: 549.6 (target 15.0 [False]); 36.9 (target 15.0 [False])
       1  3.97e+03  8.50e+01  8.93e-02  4.39e+02    9.46e+01      0              
    geophys. misfits: 45.0 (target 15.0 [False]); 7.2 (target 15.0 [True])
    Updating scaling for data misfits by  2.0787517613296913
    New scales: [0.17688368 0.82311632]
       2  7.94e+02  1.39e+01  9.59e-02  9.00e+01    8.64e+01      0   Skip BFGS  
    geophys. misfits: 8.8 (target 15.0 [True]); 5.4 (target 15.0 [True])
    All targets have been reached
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 1.5000e+04
    0 : |xc-x_last| = 3.0152e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 8.6336e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 8.6336e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      3
    ------------------------- DONE! -------------------------
    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:311: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:318: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:363: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:372: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:423: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:430: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.







|

.. code-block:: default


    import discretize as Mesh
    from SimPEG import (
        simulation,
        maps,
        data_misfit,
        directives,
        optimization,
        regularization,
        inverse_problem,
        inversion,
        utils,
    )
    import numpy as np
    import matplotlib.pyplot as plt

    # Random seed for reproductibility
    np.random.seed(1)
    # Mesh
    N = 100
    mesh = Mesh.TensorMesh([N])

    # Survey design parameters
    nk = 30
    jk = np.linspace(1.0, 59.0, nk)
    p = -0.25
    q = 0.25


    # Physics
    def g(k):
        return np.exp(p * jk[k] * mesh.cell_centers_x) * np.cos(
            np.pi * q * jk[k] * mesh.cell_centers_x
        )


    G = np.empty((nk, mesh.nC))

    for i in range(nk):
        G[i, :] = g(i)

    m0 = np.zeros(mesh.nC)
    m0[20:41] = np.linspace(0.0, 1.0, 21)
    m0[41:57] = np.linspace(-1, 0.0, 16)

    poly0 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[0.0, -4.0, 4.0])
    poly1 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[-0.0, 3.0, 6.0, 6.0])
    poly0_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, -4.0, 4.0])
    poly1_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, 3.0, 6.0, 6.0])
    cluster_mapping = [maps.IdentityMap(), poly0_inverse, poly1_inverse]

    m1 = np.zeros(100)
    m1[20:41] = 1.0 + (poly0 * np.vstack([m0[20:41], m1[20:41]]).T)[:, 1]
    m1[41:57] = -1.0 + (poly1 * np.vstack([m0[41:57], m1[41:57]]).T)[:, 1]

    model2d = np.vstack([m0, m1]).T
    m = utils.mkvc(model2d)

    clfmapping = utils.GaussianMixtureWithNonlinearRelationships(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        means_init=np.array(
            [
                [0, 0],
                [m0[20:41].mean(), m1[20:41].mean()],
                [m0[41:57].mean(), m1[41:57].mean()],
            ]
        ),
        verbose=0,
        verbose_interval=10,
        cluster_mapping=cluster_mapping,
    )
    clfmapping = clfmapping.fit(model2d)

    clfnomapping = utils.WeightedGaussianMixture(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        verbose=0,
        verbose_interval=10,
    )
    clfnomapping = clfnomapping.fit(model2d)

    wires = maps.Wires(("m1", mesh.nC), ("m2", mesh.nC))

    relatrive_error = 0.01
    noise_floor = 0.0

    prob1 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m1)
    survey1 = prob1.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )

    prob2 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m2)
    survey2 = prob2.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )


    dmis1 = data_misfit.L2DataMisfit(simulation=prob1, data=survey1)
    dmis2 = data_misfit.L2DataMisfit(simulation=prob2, data=survey2)
    dmis = dmis1 + dmis2
    minit = np.zeros_like(m)

    # Distance weighting
    wr1 = np.sum(prob1.G ** 2.0, axis=0) ** 0.5
    wr1 = wr1 / np.max(wr1)
    wr2 = np.sum(prob2.G ** 2.0, axis=0) ** 0.5
    wr2 = wr2 / np.max(wr2)
    wr = np.r_[wr1, wr2]
    W = utils.sdiag(wr)

    reg_simple = utils.make_PGIwithRelationships_regularization(
        mesh=mesh,
        gmmref=clfmapping,
        gmm=clfmapping,
        approx_gradient=True,
        alpha_x=1.0,
        wiresmap=wires,
        cell_weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[
        np.zeros(len(reg_simple.objfcts[0].objfcts)),
        100.0 * np.ones(len(reg_simple.objfcts[1].objfcts)),
        1.0 * np.ones(len(reg_simple.objfcts[2].objfcts)),
    ]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(verbose=True)
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_map = inv.run(minit)

    # Inversion with no nonlinear mapping
    reg_simple_no_map = utils.make_PGI_regularization(
        mesh=mesh,
        gmmref=clfnomapping,
        gmm=clfnomapping,
        approx_gradient=True,
        alpha_x=1.0,
        wiresmap=wires,
        cell_weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )


    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple_no_map, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[
        np.zeros(len(reg_simple_no_map.objfcts[0].objfcts)),
        100.0 * np.ones(len(reg_simple_no_map.objfcts[1].objfcts)),
        1.0 * np.ones(len(reg_simple_no_map.objfcts[2].objfcts)),
    ]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(
        chiSmall=1.0, TriggerSmall=True, TriggerTheta=False, verbose=True
    )
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_no_map = inv.run(minit)

    # Tikhonov Inversion

    reg1 = regularization.Tikhonov(mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m1)
    reg1.cell_weights = wr1
    reg2 = regularization.Tikhonov(mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m2)
    reg2.cell_weights = wr2
    reg = reg1 + reg2

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg, opt)

    # directives
    alpha0_ratio = np.r_[
        100.0 * np.ones(len(reg.objfcts[0].objfcts)),
        1.0 * np.ones(len(reg.objfcts[1].objfcts)),
    ]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    beta_schedule = directives.BetaSchedule(coolingFactor=5.0, coolingRate=1)
    targets = directives.MultiTargetMisfits(
        TriggerSmall=False,
        verbose=True,
    )

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, targets, beta_schedule, scaling_schedule],
    )

    mtik = inv.run(minit)


    # Final Plot
    fig, axes = plt.subplots(3, 4, figsize=(25, 15))
    axes = axes.reshape(12)
    left, width = 0.25, 0.5
    bottom, height = 0.25, 0.5
    right = left + width
    top = bottom + height

    axes[0].set_axis_off()
    axes[0].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using true nonlinear\npetrophysical relationships"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[0].transAxes,
    )

    axes[1].plot(mesh.cell_centers_x, wires.m1 * mcluster_map, "b.-", ms=5, marker="v")
    axes[1].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[1].set_title("Problem 1")
    axes[1].legend(["Recovered Model", "True Model"], loc=1)
    axes[1].set_xlabel("X")
    axes[1].set_ylabel("Property 1")

    axes[2].plot(mesh.cell_centers_x, wires.m2 * mcluster_map, "r.-", ms=5, marker="v")
    axes[2].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[2].set_title("Problem 2")
    axes[2].legend(["Recovered Model", "True Model"], loc=1)
    axes[2].set_xlabel("X")
    axes[2].set_ylabel("Property 2")

    x, y = np.mgrid[-1:1:0.01, -4:2:0.01]
    pos = np.empty(x.shape + (2,))
    pos[:, :, 0] = x
    pos[:, :, 1] = y
    CS = axes[3].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[3].scatter(wires.m1 * mcluster_map, wires.m2 * mcluster_map, marker="v")
    axes[3].set_title("Petrophysical Distribution")
    CS.collections[0].set_label("")
    axes[3].legend(["True Petrophysical Distribution", "Recovered model crossplot"])
    axes[3].set_xlabel("Property 1")
    axes[3].set_ylabel("Property 2")

    # fig.suptitle(
    #    'Doodling with Mapping: one mapping per identified rock unit\n' +
    #    'Joint inversion of 1D Linear Problems ' +
    #    'with nonlinear petrophysical relationships',
    #    fontsize=24
    # )

    axes[4].set_axis_off()
    axes[4].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using a pure\nGaussian distribution"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[4].transAxes,
    )

    axes[5].plot(mesh.cell_centers_x, wires.m1 * mcluster_no_map, "b.-", ms=5, marker="v")
    # axes[5].plot(mesh.cell_centers_x, wires.m1 * reg_simple_no_map.objfcts[0].mref, 'g--')

    axes[5].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[5].set_title("Problem 1")
    axes[5].legend(["Recovered Model", "True Model"], loc=1)
    axes[5].set_xlabel("X")
    axes[5].set_ylabel("Property 1")

    axes[6].plot(mesh.cell_centers_x, wires.m2 * mcluster_no_map, "r.-", ms=5, marker="v")
    # axes[6].plot(mesh.cell_centers_x, wires.m2 * reg_simple_no_map.objfcts[0].mref, 'g--')

    axes[6].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[6].set_title("Problem 2")
    axes[6].legend(["Recovered Model", "True Model"], loc=1)
    axes[6].set_xlabel("X")
    axes[6].set_ylabel("Property 2")

    CSF = axes[7].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.5,
    )  # , cmap='viridis')
    CS = axes[7].contour(
        x,
        y,
        np.exp(clfnomapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        500,
        cmap="viridis",
    )
    axes[7].scatter(wires.m1 * mcluster_no_map, wires.m2 * mcluster_no_map, marker="v")
    axes[7].set_title("Petrophysical Distribution")
    CSF.collections[0].set_label("")
    CS.collections[0].set_label("")
    axes[7].legend(
        [
            "True Petro. Distribution",
            "Modeled Petro. Distribution",
            "Recovered model crossplot",
        ]
    )
    axes[7].set_xlabel("Property 1")
    axes[7].set_ylabel("Property 2")

    # Tikonov

    axes[8].set_axis_off()
    axes[8].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Tikhonov\n~Using a single cluster"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[8].transAxes,
    )

    axes[9].plot(mesh.cell_centers_x, wires.m1 * mtik, "b.-", ms=5, marker="v")
    axes[9].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[9].set_title("Problem 1")
    axes[9].legend(["Recovered Model", "True Model"], loc=1)
    axes[9].set_xlabel("X")
    axes[9].set_ylabel("Property 1")

    axes[10].plot(mesh.cell_centers_x, wires.m2 * mtik, "r.-", ms=5, marker="v")
    axes[10].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[10].set_title("Problem 2")
    axes[10].legend(["Recovered Model", "True Model"], loc=1)
    axes[10].set_xlabel("X")
    axes[10].set_ylabel("Property 2")

    CS = axes[11].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[11].scatter(wires.m1 * mtik, wires.m2 * mtik, marker="v")
    axes[11].set_title("Petro Distribution")
    CS.collections[0].set_label("")
    axes[11].legend(["True Petro Distribution", "Recovered model crossplot"])
    axes[11].set_xlabel("Property 1")
    axes[11].set_ylabel("Property 2")
    plt.subplots_adjust(wspace=0.3, hspace=0.3, top=0.85)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  56.960 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
